#! /usr/bin/env python

import os
import sys

EXECUTE_MODULE=False
PROFILE=False
PROFILE_COUNT=30

# Get current directory
cur_dir, _ = os.path.split(__file__)

# Modify the python path
python_path = os.environ.get('PYTHONPATH', '')
python_dir = os.path.join(cur_dir, 'python')

os.environ['PYTHONPATH'] =  python_dir + os.pathsep + python_path

# Set all of our environment directories to local references if they are not
# already set
var_info = {
    'XPKG_ROOT' : 'env',
    'XPKG_TREE' : 'pkgs',
    'XPKG_REPO' : 'repo',
}

for var_name, directory in var_info.iteritems():
    if not var_name in os.environ:
        os.environ[var_name] = os.path.abspath(os.path.join(cur_dir, directory))

# Run our python program
if not EXECUTE_MODULE:
    # Call out to the python program
    os.execvp(sys.executable,
              [sys.executable, '-m', 'xpkg.main'] + sys.argv[1:])
else:
    # Put our module on the path and run the main method
    sys.path.insert(0, python_dir)

    from xpkg import main

    if not PROFILE:
        main.main(sys.argv)
    else:
        import statprof

        statprof.start()
        try:
            for i in xrange(0, PROFILE_COUNT):
                main.main(sys.argv)
        finally:
            statprof.stop()
            statprof.display()
